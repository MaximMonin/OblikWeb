<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:classes="oblik.basetype.*"
	paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="0" 
	width="100%" height="100%" label="{RM('UserAdminTitle')}"  initialize="init()">
    <mx:Script>
        <![CDATA[

// Copyright (C) Maxim A. Monin 2009-2010 

			import flash.events.Event;
			import flash.events.KeyboardEvent;
			import flash.events.MouseEvent;
			import mx.resources.ResourceManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
    	   	import mx.rpc.soap.Operation;
	       	import mx.rpc.soap.WebService;
	       	import mx.controls.Alert;
        	import mx.collections.ArrayCollection;

			private var srv:WebService;
			private var ReadUsersOper:Operation;
			private var DeleteUserOper:Operation;
			private var ContextId:String;
			private var ReadOnly:Boolean;
			private var _init:Boolean = false;
			private var dp:ArrayCollection;

			private function init():void
			{
				if (_init == true) return;
				srv = new WebService();
				ReadUsersOper = new Operation(null, "ReadUsers");
				ReadUsersOper.addEventListener(ResultEvent.RESULT, OnUserList, false, 0, true);
				ReadUsersOper.addEventListener(FaultEvent.FAULT, Onfault, false, 0, true);
				DeleteUserOper = new Operation(null, "DeleteUser");
				DeleteUserOper.addEventListener(ResultEvent.RESULT, OnDeleteUser, false, 0, true);
				DeleteUserOper.addEventListener(FaultEvent.FAULT, Onfault, false, 0, true);
				srv.operations = [ReadUsersOper,DeleteUserOper];
				_init = true;
			}
			public function Initialize ( iReadOnly:Boolean, servicepath:String, iContextId:String):void 
        	{
				srv.wsdl = servicepath;
				ContextId = iContextId;
				ReadOnly = iReadOnly;
				newButton.enabled = !ReadOnly;
				deleteButton.enabled = !ReadOnly;
				if (ReadOnly == true)
					this.label += "(" + RM('ReadOnly') + ")";

				srv.loadWSDL();
				selService.SetWebService(servicepath);
				selService.ContextId = ContextId;
				selService.addEventListener("ValueCommit", OnValueCommit);
				selService.addEventListener("ValueSelect", OnValueSelect);
				selUser.SetWebService(servicepath);
				selUser.ContextId = ContextId;
				selUser.addEventListener("ValueCommit", OnValueCommit);
				selUser.addEventListener("ValueSelect", OnValueSelect);
				
				UpdateData ();
	       	}
			private function RM (messname:String):String
			{
				return ResourceManager.getInstance().getString('Console',messname);
			}
        	private function Onfault(event:FaultEvent):void
        	{
            	Alert.show(event.fault.faultString, RM('ConnectionError'));
        	}
	        private function OnUserList(event:ResultEvent):void
    	    {
          		dp = event.result.UserProfile;
	  			dg.dataProvider = dp;
        	}
        	private function EditUser ():void
        	{
        		if (dg.selectedItem)
        			this.parentApplication.UpdateProfile (ContextId, false, ReadOnly, dg.selectedItem.Login);
        	}
        	private function NewUser ():void
        	{
        		if (ReadOnly == false)
        			this.parentApplication.UpdateProfile (ContextId, true, ReadOnly, "");
        	}
        	private function DeleteUser ():void
        	{
        		if (dg.selectedItem && ReadOnly == false)
        			DeleteUserOper.send (ContextId, dg.selectedItem.Login);
        	}
        	private function UpdateData ():void
        	{
				ReadUsersOper.send (ContextId, MyUsers.selected, selService.InternalValueStr, selUser.InternalValueStr);
        	}
        	private function OnDeleteUser(event:ResultEvent):void
        	{
	        	if (event.result.OutMessage == "Error")
    	    		Alert.show(RM('UserAdminDeleteError'));
        		if (event.result.OutMessage == "CannotDelete")
        			Alert.show(RM('UserAdminCannotDelete'));
        		if (event.result.OutMessage == "OK")
        			UpdateData ();	
        	}
			private function OnValueCommit (e:Event):void
			{
				UpdateData (); 
			}
			private function OnValueSelect (e:Event):void
			{
				UpdateData (); 
			}
        ]]>
    </mx:Script>
    <mx:HBox width="100%" height="30" verticalAlign="middle" horizontalAlign="left" id="ControlArea" borderStyle="solid" paddingLeft="5">
        <mx:LinkButton toolTip="{RM('UserAdminNewUser')}" id="newButton" icon="@Embed('new.png')" width="16" height="16" click="NewUser()"/>
        <mx:LinkButton toolTip="{RM('UserAdminEditUser')}" id="editButton" icon="@Embed('edit.png')" width="16" height="16" click="EditUser()"/>
        <mx:LinkButton toolTip="{RM('UserAdminDeleteUser')}" id="deleteButton" icon="@Embed('delete.png')" width="16" height="16" click="DeleteUser()"/>
        <mx:Spacer width="15"/>
        <classes:OblikLogical id="MyUsers" label="{RM('UserAdminMyUsers')}" toolTip="{RM('UserAdminMyUsersTip')}" selected="true"/>
        <mx:Label text="{RM('UserAdminService')+':'}"/>
        <classes:OblikBasetype width="200" id="selService" basetype="USERSERVICE" dropDownWidth="300">
        </classes:OblikBasetype>
        <mx:Label text="{RM('ProfileUserName')+':'}"/>
        <classes:OblikBasetype width="200" id="selUser" basetype="USER" dropDownWidth="300">
        </classes:OblikBasetype>
        <mx:LinkButton toolTip="{RM('UserAdminUpdate')}" id="updateButton" icon="@Embed('update.png')" width="16" height="16" click="UpdateData()"/>
    </mx:HBox>
    <mx:VBox height="100%" width="100%">
        <mx:DataGrid width="100%" height="100%" id="dg" doubleClickEnabled="true" doubleClick="EditUser()">
            <mx:columns>
                <mx:DataGridColumn headerText="{RM('ProfileId')}" dataField="Id" width="50"  textAlign="right"/>
                <mx:DataGridColumn headerText="{RM('ProfileLogin')}" dataField="Login" width="150"/>
                <mx:DataGridColumn headerText="{RM('ProfileUserName')}" dataField="Name" width="200"/>
                <mx:DataGridColumn headerText="{RM('ProfileBanned')}" dataField="Banned" width="80"  itemRenderer="oblik.basetype.OblikLogicalBr" textAlign="center"/>
                <mx:DataGridColumn headerText="{RM('ProfileCompany')}" dataField="Company" />
                <mx:DataGridColumn headerText="{RM('ProfilePosition')}" dataField="Position"/>
                <mx:DataGridColumn headerText="{RM('ProfileEMail')}" dataField="EMail"/>
			</mx:columns>
        </mx:DataGrid>
    </mx:VBox>
</mx:VBox>
